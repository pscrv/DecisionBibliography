from django.core.management.base import BaseCommand

class Command(BaseCommand):
    help = 'Populates the DB for one board'
    # See https://docs.djangoproject.com/en/1.9/howto/custom-management-commands/#module-django.core.management

    def add_arguments(self, parser):
        parser.add_argument('board', type=str)

    def handle(self, *args, **options):
        board = options['board']

        from Decisions.models import DecisionBibliographyModel
        startcount = DecisionBibliographyModel.objects.count()
        self.stdout.write('DB contains ' + str(startcount) + ' records.')
        self.stdout.write('Populating...')


        from Decisions.management.utilities.DBPopulator import BibliographyGetter
        populator = BibliographyGetter()
        populator.GetAllForBoard(board)
        populator._getYearForBoard(board, '08')
        
        endcount = DecisionBibliographyModel.objects.count()
        self.stdout.write('DB contains ' + str(endcount) + ' records.')
        self.stdout.write(str(endcount - startcount) + ' have been added.')
        x = 1
